networks:
  mid-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16


services:
  mysql:
    image: mysql:8.4.1
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      TZ: Asia/Shanghai
      SET_CONTAINER_TIMEZONE: true
      CONTAINER_TIMEZONE: Asia/Shanghai
      MYSQL_DATABASE: test_db
      MYSQL_USER: test_user
      MYSQL_PASSWORD: test123
    volumes:
      - ${PWD}/mysql/config:/etc/mysql/conf.d
      - ${PWD}/mysql/data:/var/lib/mysql
      - ${PWD}/mysql/logs:/var/log/mysql
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      my-network:
        ipv4_address: 172.20.0.2

  # MinIO
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - ${PWD}/minio_data/data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped
    networks:
      my-network:
        ipv4_address: 172.20.0.3

  # Nacos
  nacos:
    image: nacos/nacos-server:v2.3.2
    container_name: nacos
    env_file:
      - ${PWD}/nacos/env/nacos-standlone-mysql.env
    volumes:
      - ${PWD}/nacos/logs/:/home/nacos/logs
    ports:
      - "8848:8848"
      - "9848:9848"
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      my-network:
        ipv4_address: 172.20.0.4

  # Redis
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    environment:
      - REDIS_PASSWORD=123456
    volumes:
      - ${PWD}/redis/config/redis.conf:/usr/local/etc/redis/redis.conf:rw
      - ${PWD}/redis/data:/data:rw
    command:
      /bin/bash -c "redis-server /usr/local/etc/redis/redis.conf"
    networks:
      my-network:
        ipv4_address: 172.20.0.5

  # Elasticsearch
  es:
    container_name: es
    image: elasticsearch:8.13.0
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=123456
      - TZ=Asia/Shanghai
    ports:
      - "9200:9200"
      - "9300:9300"
    mem_limit: 2g
    volumes:
      - ${PWD}/es/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ${PWD}/es/data:/usr/share/elasticsearch/data
      - ${PWD}/es/plugins:/usr/share/elasticsearch/plugins
    restart: always
    networks:
      my-network:
        ipv4_address: 172.20.0.6

  # XXL-JOB
  xxljob:
    image: xuxueli/xxl-job-admin:2.4.1
    container_name: xxl-job
    volumes:
      - ${PWD}/xxl-job/config/application.properties:/application.properties
    ports:
      - "8881:8080"
    restart: always
    depends_on:
      - mysql
    networks:
      my-network:
        ipv4_address: 172.20.0.7

  # RocketMQ
  namesrv:
    image: apache/rocketmq:5.2.0
    container_name: rmqnamesrv
    ports:
      - 9876:9876
    volumes:
      - ${PWD}/rocketMQ/data/namesrv/logs:/home/rocketmq/logs
    command: sh mqnamesrv -n 172.16.0.104:9876
    networks:
      my-network:
        ipv4_address: 172.20.0.8

  broker:
    image: apache/rocketmq:5.2.0
    container_name: rmqbroker
    ports:
      - 10909:10909
      - 10911:10911
      - 10912:10912
    volumes:
      - ${PWD}/rocketMQ/data/broker/logs:/home/rocketmq/logs
      - ${PWD}/rocketMQ/data/broker/store:/home/rocketmq/store
      - ${PWD}/rocketMQ/data/broker/conf/broker.conf:/home/rocketmq/rocketmq-5.2.0/conf/broker.conf
    command: sh mqbroker -n 172.16.0.104:9876  -c /home/rocketmq/rocketmq-5.2.0/conf/broker.conf autoCreateTopicEnable=true
    depends_on:
      - namesrv
    networks:
      my-network:
        ipv4_address: 172.20.0.9

  rocketmq-dashboard:
    image: apacherocketmq/rocketmq-dashboard:latest
    container_name: rocketmq-dashboard
    environment:
      - JAVA_OPTS=-Drocketmq.namesrv.addr=172.16.0.104:9876
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - namesrv
      - broker
    networks:
      my-network:
        ipv4_address: 172.20.0.10

  kibana:
    image: kibana:8.13.0
    container_name: kibana
    restart: always
    ports:
      - 5601:5601
    volumes:
      - ${PWD}/kibana/conf/kibana.yml:/usr/share/kibana/config/kibana.yml
    depends_on:
      - es
    networks:
      my-network:
        ipv4_address: 172.20.0.11

  seata-server:
    image: seataio/seata-server:2.0.0
    container_name: seata-server
    environment:
      - STORE_MODE=db
      - SEATA_IP=172.16.0.104
      - SEATA_PORT=8091
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${PWD}/seata-server/resources/application.yml:/seata-server/resources/application.yml
      - ${PWD}/seata-server/logs:/seata-server/logs
    ports:
      - "7091:7091"
      - "8091:8091"
    restart: always
    networks:
      my-network:
        ipv4_address: 172.20.0.12

  sentinel-dashboard:
    image: javajianghu/sentinel-dashboard:v1.8.8
    container_name: sentinel-dashboard
    environment:
      - dashboard.server=172.16.0.104:8888
    ports:
      - "8888:8888"
    restart: always
    networks:
      my-network:
        ipv4_address: 172.20.0.13

  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    restart: unless-stopped
    networks:
      my-network:
        ipv4_address: 172.20.0.14
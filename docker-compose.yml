services:
  mysql:
    image: mysql:8.4.1
    container_name: mysql-8
    environment:
      - MYSQL_ROOT_PASSWORD=AtuKy1PVVnuZswEUBaG1
      - TZ=Asia/Shanghai
      - SET_CONTAINER_TIMEZONE=true
      - CONTAINER_TIMEZONE=Asia/Shanghai
    volumes:
      - ${PWD}/mysql/config:/etc/mysql/conf.d
      - ${PWD}/mysql/data:/var/lib/mysql
      - ${PWD}/mysql/logs:/var/log/mysql
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 3306:3306
    restart: always
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      collide-network:
        ipv4_address: 172.20.1.10

  # Nacos
  nacos:
    image: nacos/nacos-server:v2.3.2
    container_name: nacos
    env_file:
      - ${PWD}/nacos/env/nacos-standlone-mysql.env
    volumes:
      - ${PWD}/nacos/logs/:/home/nacos/logs
    ports:
      - "8848:8848"
      - "9848:9848"
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      collide-network:
        ipv4_address: 172.20.1.30

  #  # MinIO
  #  minio:
  #    image: minio/minio
  #    container_name: minio
  #    ports:
  #      - "9000:9000"
  #      - "9001:9001"
  #    environment:
  #      MINIO_ROOT_USER: minioadmin
  #      MINIO_ROOT_PASSWORD: minioadmin
  #    volumes:
  #      - ${PWD}/minio_data/data:/data
  #    command: server /data --console-address ":9001"
  #    healthcheck:
  #      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
  #      interval: 30s
  #      timeout: 20s
  #      retries: 3
  #    restart: unless-stopped
  #    networks:
  #      collide-network:
  #        ipv4_address: 172.20.1.20

  # Redis
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    environment:
      - REDIS_PASSWORD=123456
    volumes:
      - ${PWD}/redis/config/redis.conf:/usr/local/etc/redis/redis.conf:rw
      - ${PWD}/redis/data:/data:rw
    command:
      /bin/bash -c "redis-server /usr/local/etc/redis/redis.conf"
    networks:
      collide-network:
        ipv4_address: 172.20.1.40

#  seata-server:
#    image: seataio/seata-server:2.0.0
#    container_name: seata-server
#    environment:
#      - STORE_MODE=db
#      - SEATA_IP=172.20.1.50
#      - SEATA_PORT=8091
#    volumes:
#      - /etc/localtime:/etc/localtime:ro
#      - ${PWD}/seata-server/resources/application.yml:/seata-server/resources/application.yml
#      - ${PWD}/seata-server/logs:/seata-server/logs
#    ports:
#      - "7091:7091"
#      - "8091:8091"
#    restart: always
#    networks:
#      collide-network:
#        ipv4_address: 172.20.1.50

#  sentinel-dashboard:
#    image: javajianghu/sentinel-dashboard:v1.8.8
#    container_name: sentinel-dashboard
#    environment:
#      - dashboard.server=172.20.1.60:8888
#    ports:
#      - "8888:8888"
#    restart: always
#    networks:
#      collide-network:
#        ipv4_address: 172.20.1.60
#
#  # RocketMQ NameServer
#  rocketmq-nameserver:
#    image: apache/rocketmq:5.1.4
#    container_name: rocketmq-nameserver
#    ports:
#      - "9876:9876"
#    environment:
#      - JAVA_OPT=-server -Xms256m -Xmx256m
#    command: ["sh", "mqnamesrv"]
#    restart: always
#    networks:
#      collide-network:
#        ipv4_address: 172.20.1.70
#
#  # RocketMQ Broker
#  rocketmq-broker:
#    image: apache/rocketmq:5.1.4
#    container_name: rocketmq-broker
#    ports:
#      - "10909:10909"
#      - "10911:10911"
#    environment:
#      - JAVA_OPT=-server -Xms256m -Xmx256m
#      - NAMESRV_ADDR=172.20.1.70:9876
#    command: ["sh", "mqbroker", "-n", "172.20.1.70:9876", "-c", "/home/rocketmq/rocketmq-5.1.4/conf/broker.conf"]
#    depends_on:
#      - rocketmq-nameserver
#    restart: always
#    networks:
#      collide-network:
#        ipv4_address: 172.20.1.71
#
#  # Elasticsearch
#  elasticsearch:
#    image: elasticsearch:8.11.0
#    container_name: elasticsearch
#    environment:
#      - discovery.type=single-node
#      - ES_JAVA_OPTS=-Xms512m -Xmx512m
#      - xpack.security.enabled=false
#      - xpack.security.enrollment.enabled=false
#    ports:
#      - "9200:9200"
#      - "9300:9300"
#    volumes:
#      - ${PWD}/es/data:/usr/share/elasticsearch/data
#      - ${PWD}/es/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
#    restart: always
#    networks:
#      collide-network:
#        ipv4_address: 172.20.1.80

  nginx:
    image: nginx:latest
    container_name: nginx
    network_mode: "host"
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    restart: unless-stopped

networks:
  collide-network:
    external: true
